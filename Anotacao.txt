Fragance Euphoria


Codeigniter


Bootstrap


jQuery


Ajax



Olá! Criar um sistema de perfumaria pode ser uma ótima ideia. Além do Controller de Perfume, existem vários outros componentes que você pode considerar para tornar o sistema mais completo e funcional. Aqui estão algumas sugestões:

Modelo de Perfume: Defina os atributos que um perfume pode ter, como nome, marca, tipo (masculino, feminino, unissex), notas de fragrância, volume, preço, entre outros.

Banco de Dados: Utilize um banco de dados para armazenar informações sobre os perfumes. Você pode usar um banco de dados relacional (como MySQL, PostgreSQL) ou um banco de dados NoSQL (como MongoDB) dependendo da complexidade do seu sistema.

Interface Gráfica: Desenvolva uma interface amigável para os usuários interagirem com o sistema. Isso pode ser uma aplicação web, um aplicativo móvel ou até mesmo ambos, dependendo do seu público-alvo.

Autenticação e Autorização: Implemente um sistema de login e controle de acesso para gerenciar usuários, permitindo que os administradores façam a gestão dos perfumes e clientes.

Controller de Marca: Permita aos usuários adicionar, editar e excluir informações sobre as marcas de perfumes. Cada perfume pode pertencer a uma marca específica.

Controller de Categoria: Crie uma forma de classificar os perfumes por categorias, como fragrâncias florais, cítricas, amadeiradas, etc.

Carrinho de Compras (para um sistema de e-commerce): Se você pretende vender os perfumes online, implemente um carrinho de compras para os clientes selecionarem os produtos antes de finalizarem a compra.

Sistema de Pagamento (para um sistema de e-commerce): Integre um sistema de pagamento seguro para processar transações.

Gestão de Pedidos (para um sistema de e-commerce): Crie uma forma de os clientes acompanharem o status dos seus pedidos e os administradores gerenciarem os pedidos recebidos.

Avaliações e Comentários: Permita que os clientes avaliem e comentem sobre os perfumes, fornecendo feedback valioso para outros consumidores.

Relatórios e Estatísticas: Implemente um sistema para gerar relatórios sobre vendas, inventário e outros indicadores-chave de desempenho.

Lembre-se de sempre considerar a experiência do usuário e a segurança dos dados ao desenvolver o sistema. Além disso, dependendo do escopo do projeto, pode ser útil contar com uma equipe de desenvolvedores, designers e testadores para garantir que o sistema funcione de maneira eficiente e sem problemas.



Rotas de Carrinho

// application/config/routes.php
$route['carrinho'] = 'carrinho';
$route['carrinho/adicionar'] = 'carrinho/adicionar';
$route['carrinho/remover/(:any)'] = 'carrinho/remover/$1';
$route['carrinho/limpar'] = 'carrinho/limpar';

Adicionando no Carrinho com Ajax

<!-- Adicione o Alertify.js -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/alertify.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/themes/default.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/alertify.min.js"></script>


Button para Adicionar

<div class="d-flex">
    <input class="form-control text-center me-3" id="inputQuantity" type="" value="1" style="max-width: 3rem" />
    <button class="btn btn-outline-dark flex-shrink-0" type="button" id="btnAdicionarCarrinho">
        <i class="fas fa-shopping-cart"></i>
        Adicionar no carrinho
    </button>
</div>

<script>
    $(document).ready(function() {
        $('#btnAdicionarCarrinho').on('click', function() {
            var produtoId = <?= $perfume->id; ?>;
            var produtoNome = '<?= $perfume->nome; ?>';
            var produtoPreco = '<?= $perfume->preco; ?>';
            var quantidade = $('#inputQuantity').val();

            $.ajax({
                type: 'POST',
                url: '<?= base_url('carrinho/adicionar'); ?>',
                data: {
                    id: produtoId,
                    nome: produtoNome,
                    preco: produtoPreco,
                    quantidade: quantidade
                },
                success: function(response) {
                    // Exibir alerta do Alertify se a adição ao carrinho for bem-sucedida
                    alertify.set('notifier', 'position', 'top-center');
                    alertify.success('Produto adicionado ao carrinho com sucesso!');

                    // Redirecionar para a página do carrinho ou faça algo com a resposta
                    window.location.href = '<?= base_url('carrinho'); ?>';
                },
                error: function() {
                    // Exibir alerta do Alertify em caso de erro
                    alertify.set('notifier', 'position', 'top-center');
                    alertify.error('Erro ao adicionar ao carrinho');
                }
            });
        });
    });
</script>
